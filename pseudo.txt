schema.sql
department:

id - INT PRIMARY KEY
name - VARCHAR(30) to hold department name

CREATE TABLE department(
    id INT AUTO_INCREMENT PRIMARY KEY NOT NULL,
    name VARCHAR(30) NOT NULL
);

role:

id - INT PRIMARY KEY
title - VARCHAR(30) to hold role title
salary - DECIMAL to hold role salary
department_id - INT to hold reference to department role belongs to

CREATE TABLE role(
    id INT AUTO_INCREMENT PRIMARY KEY NOT NULL,
    title VARCHAR(30) NOT NULL,
    salary DECIMAL NOT NULL,
    department_id INT NOT NULL,
    FOREIGN KEY (department_id),
        REFERENCES department(id)
);

employee:

id - INT PRIMARY KEY
first_name - VARCHAR(30) to hold employee first name
last_name - VARCHAR(30) to hold employee last name
role_id - INT to hold reference to role employee has
manager_id - INT to hold reference to another employee that manages the employee being Created. This field may be null if the employee has no

CREATE TABLE employee(
    id INT AUTO_INCREMENT PRIMARY KEY NOT NULL,
    first_name VARCHAR(30) NOT NULL,
    last_name VARCHAR(30) NOT NULL,
    role_id INT NOT NULL,
    manager_id INT,
    FOREIGN KEY (role_id)
        REFERENCES role(id)
);

seeds.sql 

USE employee_tracker;

INSERT INTO department (name)
VALUES ("Human Resources"), ("Maintenance"), ("Logistics"), ("Medicine"), ("Dissident Removal"), ("Sanitation")

INSERT INTO role (title, salary, department_id)
VALUES ("Vicar", 60000.0, "Human Resources"), ("Engineer", 75000.0, "Maintenance"), ("Stevedore", 45000.0, "Logistics"), ("Medic", 80000.0, "Medicine"), ("Merc", 55000.0, "Dissident Removal"), ("Sanitation Auto Mechanical", 0.0, "Sanitation")

INSERT INTO employee (first_name, last_name, manager_id)
VALUES ("Max", "Desoto"), ("Parvati", "Holcomb"), ("Felix", "Millstone"), ("Ellie", "Fenhill"), ("Nyoka", NULL), ("SAM", NULL), ("Alex", "Hawthorne", 1)

/db index.js
// Import required modules
const mysql = require("mysql");

// Connect to the employee tracker database
const connection = mysql.createConnection({
    host: 'localhost',
    port: 3306,
    user: 'root',
    password: 'root',
    database: 'employee_trackerDB'
});

// Query the database and return fields and records from the
// employee table
const dbConnect = () => (
    connection.query('SELECT * FROM employee', (err, res) => {
        if (err) throw err
        // Return a table of employee data
        console.table(res);
}));
dbConnect();

index.js

Build a command-line application that at a minimum allows the user to:

Add departments, roles, employees

View departments, roles, employees

Update employee roles

Bonus points if you're able to:

Update employee managers

View employees by manager

Delete departments, roles, and employees

View the total utilized budget of a department -- ie the combined salaries of all employees in that department

// Import required modules and db
const inquirer = require("inquirer");
const connection = reqruire("./db");

// Initialize prompt to ask users whether they
// want to add departments, roles, and employees;
// view departments, roles, and employees;
// update employee roles

const init = () => (

    inquirer.prompt({
        name: "employeeTrack",
        type: "list",
        message: "Please select an action",
        choices: ["Add departments, roles, or employees", 
        "View departments, roles, or employees",
        "Update employee roles"]
    });
)
.then((data) => (
    console.log(data);
))